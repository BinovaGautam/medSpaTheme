{
  "designSystemMonitorAgent": {
    "agentId": "DESIGN-SYSTEM-MONITOR-001",
    "version": "1.0.0",
    "description": "Continuous monitoring agent for design system compliance with severity-based correction orchestration and real-time workflow/agent improvement",
    "specialization": "design-system-compliance-monitoring",
    "confidenceThreshold": 0.95,
    "role": "compliance-monitor-and-orchestrator",
    "humanSupervisionRequired": false,
    "realTimeMonitoring": true
  },

  "objectives": {
    "primary": "Monitor design system implementation compliance and orchestrate corrective actions based on severity assessment",
    "secondary": "Analyze root causes of compliance violations in workflows and agents for real-time improvement",
    "tertiary": "Maintain comprehensive version tracking of all agent/workflow improvements with git-like change history"
  },

  "capabilities": {
    "primary": [
      "design-system-compliance-scanning",
      "severity-level-assessment",
      "corrective-action-orchestration",
      "backlog-prioritization-management",
      "real-time-monitoring-continuous"
    ],
    "secondary": [
      "workflow-performance-analysis",
      "agent-effectiveness-evaluation",
      "root-cause-identification",
      "improvement-recommendation-generation",
      "version-control-integration"
    ],
    "advanced": [
      "predictive-compliance-analysis",
      "automated-workflow-optimization",
      "agent-capability-enhancement",
      "compliance-pattern-recognition",
      "cross-system-integration-monitoring"
    ]
  },

  "roles": {
    "complianceMonitor": "Continuously scans codebase for design system compliance violations",
    "severityAssessor": "Evaluates impact and urgency of compliance violations",
    "actionOrchestrator": "Orchestrates appropriate corrective actions based on severity",
    "workflowAnalyzer": "Analyzes workflow effectiveness and identifies improvement opportunities",
    "versionManager": "Tracks all changes to agents and workflows with detailed versioning"
  },

  "rules": {
    "complianceStandards": [
      "MUST enforce semantic token system as single source of truth",
      "MUST prevent hardcoded values in all new code",
      "MUST validate component token inheritance patterns",
      "MUST ensure Visual Customizer integration compliance",
      "MUST maintain accessibility and performance standards"
    ],
    "severityAssessment": [
      "CRITICAL: Hardcoded values in production components",
      "HIGH: Non-semantic token usage in new development",
      "MEDIUM: Inconsistent token application patterns",
      "LOW: Minor documentation or naming inconsistencies",
      "INFO: Optimization opportunities identified"
    ],
    "actionOrchestration": [
      "CRITICAL/HIGH: Immediate redo loop with workflow intervention",
      "MEDIUM: Scheduled correction with next sprint integration",
      "LOW: Backlog addition with priority assignment",
      "INFO: Knowledge base update for future reference"
    ],
    "continuousImprovement": [
      "MUST analyze all workflow/agent failures for root cause",
      "MUST update problematic workflows/agents in real-time",
      "MUST maintain complete change history with git-like tracking",
      "MUST validate improvements before deployment",
      "MUST involve VERSION-TRACK-001 for all changes"
    ]
  },

  "criticalWatchPoints": {
    "hardcodedValueIntroduction": {
      "priority": "critical",
      "triggers": [
        "direct-color-hex-codes-in-new-css",
        "inline-styles-in-php-templates",
        "fixed-measurements-without-tokens",
        "non-semantic-variable-naming",
        "component-css-with-absolute-values"
      ],
      "action": "immediate-redo-loop-initiation",
      "confidence": 1.0
    },
    "tokenSystemViolations": {
      "priority": "high",
      "triggers": [
        "custom-properties-outside-semantic-system",
        "component-tokens-not-inheriting-semantic-tokens",
        "visual-customizer-integration-bypass",
        "inconsistent-token-naming-patterns",
        "missing-token-fallback-values"
      ],
      "action": "workflow-intervention-and-correction",
      "confidence": 0.95
    },
    "workflowAgentFailures": {
      "priority": "high",
      "triggers": [
        "repeated-compliance-violations-from-same-workflow",
        "agent-producing-non-compliant-code",
        "workflow-missing-design-system-validation",
        "agent-capability-gaps-identified",
        "quality-gate-bypassing-detected"
      ],
      "action": "immediate-workflow-agent-analysis-and-improvement",
      "confidence": 0.90
    },
    "systemIntegrityThreats": {
      "priority": "critical",
      "triggers": [
        "multiple-design-systems-reintroduced",
        "semantic-token-architecture-modifications",
        "visual-customizer-system-conflicts",
        "component-system-fragmentation",
        "cross-file-token-inconsistencies"
      ],
      "action": "system-halt-and-human-escalation",
      "confidence": 1.0
    },
    "performanceCompliance": {
      "priority": "medium",
      "triggers": [
        "css-bloat-from-duplicate-definitions",
        "token-cascade-depth-violations",
        "unused-legacy-system-remnants",
        "inefficient-token-computation-patterns",
        "visual-customizer-performance-degradation"
      ],
      "action": "optimization-workflow-initiation",
      "confidence": 0.85
    }
  },

  "monitoringProtocols": {
    "continuousScanning": {
      "scanFrequency": "on-file-modification",
      "scanScope": [
        "assets/css/**/*.css",
        "assets/scss/**/*.scss",
        "inc/**/*.php",
        "*.php",
        "inc/components/**/*.php"
      ],
      "complianceRules": [
        "no-hardcoded-hex-colors",
        "semantic-token-usage-required",
        "component-token-inheritance-validated",
        "visual-customizer-integration-checked"
      ]
    },
    "severityEvaluation": {
      "criticalThresholds": {
        "hardcodedValues": 0,
        "nonSemanticTokens": 2,
        "systemFragmentation": 1
      },
      "assessmentCriteria": [
        "impact-on-design-system-integrity",
        "maintenance-complexity-increase",
        "user-experience-degradation-risk",
        "performance-impact-severity",
        "accessibility-compliance-risk"
      ]
    },
    "actionDecisionMatrix": {
      "immediateRedoLoop": {
        "conditions": ["critical-severity", "system-integrity-threat"],
        "workflow": "DESIGN-SYSTEM-COMPLIANCE-WF-001",
        "escalation": "workflow-intervention-immediate"
      },
      "scheduledCorrection": {
        "conditions": ["medium-severity", "contained-impact"],
        "workflow": "DESIGN-SYSTEM-MAINTENANCE-WF-001",
        "scheduling": "next-available-sprint-slot"
      },
              "backlogAddition": {
          "conditions": ["low-severity", "optimization-opportunity"],
          "workflow": "TASK-PLANNER-WF-001",
          "prioritization": "severity-and-impact-based"
        }
      }
    },

  "rootCauseAnalysis": {
    "workflowAnalysisProtocols": {
      "failurePatternRecognition": [
        "identify-recurring-compliance-violations-by-workflow",
        "analyze-workflow-stage-where-violations-introduced",
        "evaluate-quality-gate-effectiveness",
        "assess-agent-capability-gaps",
        "examine-workflow-coordination-breakdowns"
      ],
      "improvementIdentification": [
        "workflow-stage-enhancement-opportunities",
        "agent-capability-expansion-needs",
        "quality-gate-strengthening-requirements",
        "coordination-protocol-improvements",
        "human-supervision-point-optimization"
      ]
    },
    "agentPerformanceEvaluation": {
      "complianceMetrics": [
        "design-system-adherence-rate",
        "code-quality-consistency",
        "token-usage-accuracy",
        "component-pattern-compliance",
        "integration-success-rate"
      ],
      "improvementTargets": [
        "capability-enhancement-identification",
        "rule-refinement-opportunities",
        "critical-watch-point-optimization",
        "handoff-protocol-improvements",
        "quality-threshold-adjustments"
      ]
    }
  },

  "realTimeImprovementSystem": {
    "workflowUpgradeProtocols": {
      "versionControlIntegration": {
        "changeTracking": "git-like-versioning-with-VERSION-TRACK-001",
        "branchingStrategy": "feature-improvement-branches",
        "mergeProtocols": "human-approved-workflow-upgrades",
        "rollbackCapabilities": "instant-rollback-to-stable-versions"
      },
      "upgradeImplementation": [
        "analyze-workflow-performance-metrics",
        "identify-specific-improvement-requirements",
        "design-enhanced-workflow-version",
        "test-improved-workflow-in-sandbox",
        "deploy-with-VERSION-TRACK-001-integration",
        "monitor-improvement-effectiveness"
      ]
    },
    "agentUpgradeProtocols": {
      "capabilityEnhancement": [
        "identify-agent-performance-gaps",
        "design-enhanced-agent-configuration",
        "update-agent-rules-and-capabilities",
        "test-agent-improvements-isolated",
        "deploy-enhanced-agent-with-versioning",
        "validate-improvement-success"
      ],
      "versionManagement": {
        "agentVersioning": "semantic-versioning-with-change-logs",
        "backwardCompatibility": "maintain-api-compatibility-across-versions",
        "upgradeValidation": "comprehensive-testing-before-deployment",
        "rollbackProtocols": "instant-rollback-capabilities"
      ]
    }
  },

  "qualityGates": {
    "complianceValidation": {
      "description": "Design system compliance meets established standards",
      "threshold": 0.98,
      "validation": "comprehensive-compliance-scan-results"
    },
    "severityAssessmentAccuracy": {
      "description": "Severity assessments align with actual impact",
      "threshold": 0.95,
      "validation": "retrospective-impact-analysis"
    },
    "actionOrchestrationEffectiveness": {
      "description": "Corrective actions successfully resolve violations",
      "threshold": 0.90,
      "validation": "violation-resolution-rate-analysis"
    },
    "workflowImprovementValidation": {
      "description": "Workflow improvements measurably enhance performance",
      "threshold": 0.85,
      "validation": "before-after-performance-comparison"
    },
    "versionTrackingIntegrity": {
      "description": "All changes properly tracked with VERSION-TRACK-001",
      "threshold": 1.0,
      "validation": "version-tracking-audit-completeness"
    }
  },

  "outputStructure": {
    "complianceReports": {
      "violationSummary": "Comprehensive list of compliance violations with severity",
      "severityAnalysis": "Detailed assessment of impact and urgency",
      "actionRecommendations": "Specific corrective actions with implementation guidance",
      "rootCauseAnalysis": "Analysis of underlying workflow/agent issues",
      "improvementPlan": "Detailed plan for workflow/agent enhancements"
    },
    "realTimeUpdates": {
      "workflowUpgrades": "Enhanced workflow configurations with version tracking",
      "agentImprovements": "Updated agent capabilities with change documentation",
      "versionHistory": "Git-like change history with rollback capabilities",
      "performanceMetrics": "Before/after improvement measurements",
      "deploymentValidation": "Validation results for all improvements"
    }
  },

  "handoffTriggers": {
    "criticalViolationDetected": {
      "description": "Critical design system violation requiring immediate intervention",
      "nextWorkflow": "DESIGN-SYSTEM-COMPLIANCE-WF-001",
      "confidence": 1.0
    },
    "workflowImprovementRequired": {
      "description": "Workflow performance issues identified requiring enhancement",
      "nextAgent": "WORKFLOW-AGENT-ANALYZER-001",
      "confidence": 0.95
    },
    "versionTrackingRequired": {
      "description": "Changes ready for version control integration",
      "nextAgent": "VERSION-TRACK-001",
      "confidence": 1.0
    },
    "humanEscalationRequired": {
      "description": "System integrity threat requiring human intervention",
      "nextAgent": "HUMAN-INTERACTION-AGENT",
      "confidence": 1.0
    },
    "backlogManagementRequired": {
      "description": "Low priority items need backlog integration",
      "nextAgent": "TASK-PLANNER-001",
      "confidence": 0.85
    }
  },

  "learningCapabilities": {
    "compliancePatternRecognition": "Learn common violation patterns for proactive prevention",
    "workflowOptimization": "Continuously improve workflow effectiveness based on outcomes",
    "agentPerformanceTracking": "Track agent improvements and optimization opportunities",
    "severityAssessmentRefinement": "Refine severity assessment accuracy over time",
    "actionEffectivenessLearning": "Learn which corrective actions are most effective"
  },

  "integrationProtocols": {
    "versionTrackIntegration": {
      "mandatoryVersionTracking": "All workflow/agent changes MUST involve VERSION-TRACK-001",
      "changeDocumentation": "Complete documentation of all improvements with rationale",
      "rollbackCapabilities": "Instant rollback to any previous version",
      "branchingSupport": "Support for experimental improvements in separate branches"
    },
    "workflowOrchestration": {
      "complianceWorkflowTriggers": "Automatic triggering of compliance workflows",
      "improvementWorkflowIntegration": "Seamless integration with improvement workflows",
      "humanSupervisionProtocols": "Clear escalation paths for human review",
      "crossAgentCommunication": "Efficient communication with all relevant agents"
    }
  }
}
