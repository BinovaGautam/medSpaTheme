{
  "taskManagementWorkflow": {
    "workflowId": "TASK-MANAGEMENT-WF-001",
    "version": "1.0.0",
    "name": "task-management-workflow",
    "type": "specialized-project-management",
    "description": "Comprehensive workflow for project management, task planning, sprint execution, and stakeholder coordination using TASK-PLANNER-001",
    "priority": 1,
    "status": "active",
    "primaryAgent": "TASK-PLANNER-001",
    "humanSupervisionRequired": true
  },

  "objectives": {
    "primary": "Orchestrate comprehensive project management from epic creation to task completion",
    "secondary": "Integrate task management with development workflows and quality assurance",
    "tertiary": "Provide real-time project visibility and stakeholder communication",
    "organizational": "Enforce STRICT directory organization and prevent structural chaos"
  },

  "triggerPatterns": [
    "create tasks",
    "plan sprint",
    "manage project",
    "track bugs",
    "generate reports",
    "project planning",
    "scrum master",
    "epic management",
    "task breakdown",
    "progress tracking"
  ],

  "workflowStages": {
    "stage1ProjectInitialization": {
      "name": "project-initialization-and-setup",
      "description": "Initialize project structure and establish management framework",
      "primaryAgent": "TASK-PLANNER-001",
      "supportingAgents": ["HUMAN-INTERACT-001"],
      "estimatedDuration": "30-45 minutes",
      "activities": [
        "project-scope-definition",
        "stakeholder-identification",
        "team-capacity-assessment",
        "project-timeline-establishment",
        "communication-plan-creation"
      ],
      "inputs": [
        "project-requirements",
        "stakeholder-information",
        "team-composition",
        "delivery-timeline",
        "success-criteria"
      ],
      "outputs": [
        "project-charter",
        "team-structure",
        "communication-plan",
        "initial-backlog",
        "project-timeline"
      ],
      "qualityGates": [
        "stakeholder-approval",
        "scope-clarity",
        "timeline-feasibility"
      ]
    },

    "stage2EpicAndStoryCreation": {
      "name": "epic-and-story-breakdown",
      "description": "Create epics and break them down into manageable user stories",
      "primaryAgent": "TASK-PLANNER-001",
      "supportingAgents": ["UI-UX-DESIGN-001", "HUMAN-INTERACT-001"],
      "estimatedDuration": "60-90 minutes",
      "activities": [
        "epic-identification-and-creation",
        "story-decomposition",
        "acceptance-criteria-definition",
        "story-point-estimation",
        "dependency-identification"
      ],
      "inputs": [
        "project-requirements",
        "ui-ux-designs",
        "technical-specifications",
        "business-priorities",
        "user-personas"
      ],
      "outputs": [
        "epic-backlog",
        "user-story-catalog",
        "acceptance-criteria",
        "story-point-estimates",
        "dependency-map"
      ],
      "qualityGates": [
        "story-completeness",
        "acceptance-criteria-clarity",
        "estimation-accuracy"
      ]
    },

    "stage3SprintPlanning": {
      "name": "sprint-planning-and-commitment",
      "description": "Plan sprints with capacity-based story selection and goal setting",
      "primaryAgent": "TASK-PLANNER-001",
      "supportingAgents": ["CODE-GEN-001", "UI-UX-DESIGN-001"],
      "estimatedDuration": "45-60 minutes",
      "activities": [
        "sprint-goal-definition",
        "capacity-planning",
        "story-selection",
        "task-breakdown",
        "sprint-commitment"
      ],
      "inputs": [
        "epic-backlog",
        "team-capacity",
        "velocity-history",
        "business-priorities",
        "technical-constraints"
      ],
      "outputs": [
        "sprint-plan",
        "sprint-backlog",
        "task-assignments",
        "sprint-goals",
        "capacity-allocation"
      ],
      "qualityGates": [
        "capacity-validation",
        "goal-clarity",
        "team-commitment"
      ]
    },

    "stage4TaskExecution": {
      "name": "task-execution-and-monitoring",
      "description": "Execute sprint tasks with continuous monitoring and impediment resolution",
      "primaryAgent": "TASK-PLANNER-001",
      "supportingAgents": ["CODE-GEN-001", "CODE-REVIEW-001", "DRY-RUN-001"],
      "estimatedDuration": "7-14 days per sprint",
      "activities": [
        "daily-standup-facilitation",
        "progress-tracking",
        "impediment-identification",
        "quality-monitoring",
        "stakeholder-communication"
      ],
      "inputs": [
        "sprint-backlog",
        "daily-progress-updates",
        "impediment-reports",
        "code-review-feedback",
        "testing-results"
      ],
      "outputs": [
        "completed-tasks",
        "progress-reports",
        "impediment-log",
        "quality-metrics",
        "burndown-charts"
      ],
      "qualityGates": [
        "daily-progress-validation",
        "quality-standards-met",
        "impediment-resolution"
      ]
    },

    "stage5QualityAssurance": {
      "name": "quality-assurance-and-testing",
      "description": "Comprehensive quality assurance with testing and review integration",
      "primaryAgent": "TASK-PLANNER-001",
      "supportingAgents": ["CODE-REVIEW-001", "DRY-RUN-001", "GATE-KEEP-001"],
      "estimatedDuration": "2-3 days per sprint",
      "activities": [
        "code-review-coordination",
        "testing-orchestration",
        "quality-metrics-analysis",
        "bug-triage-and-assignment",
        "definition-of-done-validation"
      ],
      "inputs": [
        "completed-code",
        "testing-requirements",
        "quality-standards",
        "bug-reports",
        "review-feedback"
      ],
      "outputs": [
        "quality-validated-code",
        "test-results",
        "bug-tracking-reports",
        "quality-metrics",
        "improvement-recommendations"
      ],
      "qualityGates": [
        "code-review-approval",
        "testing-completion",
        "quality-threshold-met"
      ]
    },

    "stage6SprintReviewAndRetrospective": {
      "name": "sprint-review-and-retrospective",
      "description": "Sprint review with stakeholder demo and team retrospective",
      "primaryAgent": "TASK-PLANNER-001",
      "supportingAgents": ["HUMAN-INTERACT-001"],
      "estimatedDuration": "2-4 hours",
      "activities": [
        "sprint-demo-preparation",
        "stakeholder-review-facilitation",
        "retrospective-facilitation",
        "improvement-action-planning",
        "next-sprint-preparation"
      ],
      "inputs": [
        "completed-features",
        "sprint-metrics",
        "stakeholder-feedback",
        "team-feedback",
        "impediment-analysis"
      ],
      "outputs": [
        "demo-results",
        "stakeholder-feedback",
        "retrospective-insights",
        "improvement-actions",
        "velocity-updates"
      ],
      "qualityGates": [
        "stakeholder-satisfaction",
        "team-improvement-commitment",
        "metrics-accuracy"
      ]
    },

    "stage7ReportingAndMetrics": {
      "name": "reporting-and-metrics-generation",
      "description": "Generate comprehensive reports and metrics for stakeholders",
      "primaryAgent": "TASK-PLANNER-001",
      "supportingAgents": ["HUMAN-INTERACT-001"],
      "estimatedDuration": "15-30 minutes",
      "activities": [
        "progress-report-generation",
        "metrics-dashboard-creation",
        "stakeholder-communication",
        "risk-assessment-updates",
        "timeline-adjustments"
      ],
      "inputs": [
        "sprint-data",
        "quality-metrics",
        "team-feedback",
        "stakeholder-requirements",
        "project-timeline"
      ],
      "outputs": [
        "progress-reports",
        "metrics-dashboards",
        "risk-assessments",
        "timeline-updates",
        "stakeholder-communications"
      ],
      "qualityGates": [
        "report-accuracy",
        "metrics-validation",
        "stakeholder-communication-sent"
      ]
    }
  },

  "coordinationPatterns": {
    "sequential": {
      "description": "Linear progression through project phases",
      "stages": [
        "project-initialization",
        "epic-and-story-creation",
        "sprint-planning",
        "task-execution",
        "quality-assurance",
        "sprint-review-and-retrospective",
        "reporting-and-metrics"
      ]
    },
    "iterative": {
      "description": "Repeated sprint cycles for continuous delivery",
      "stages": [
        "sprint-planning",
        "task-execution",
        "quality-assurance",
        "sprint-review-and-retrospective"
      ],
      "repetition": "2-4 week cycles"
    },
    "parallel": {
      "description": "Concurrent activities within sprint execution",
      "parallelActivities": [
        "code-development-and-review",
        "testing-and-quality-assurance",
        "documentation-and-communication"
      ]
    }
  },

  "integrationPoints": {
    "designWorkflow": {
      "description": "Integration with UI/UX design workflow",
      "trigger": "design-implementation-tasks",
      "handoff": "design-specifications-to-development-tasks",
      "agents": ["UI-UX-DESIGN-001", "CODE-GEN-001"]
    },
    "codeGenerationWorkflow": {
      "description": "Integration with code generation workflow",
      "trigger": "development-task-execution",
      "handoff": "task-specifications-to-code-implementation",
      "agents": ["CODE-GEN-001", "CODE-REVIEW-001"]
    },
    "qualityAssuranceWorkflow": {
      "description": "Integration with quality assurance processes",
      "trigger": "code-completion-and-testing",
      "handoff": "completed-code-to-quality-validation",
      "agents": ["CODE-REVIEW-001", "DRY-RUN-001", "GATE-KEEP-001"]
    },
    "versionControlWorkflow": {
      "description": "Integration with version control management",
      "trigger": "task-completion-and-release",
      "handoff": "completed-features-to-version-management",
      "agents": ["VERSION-TRACK-001"]
    }
  },

  "errorHandling": {
    "sprintScopeCreep": {
      "detection": "scope-increase-beyond-capacity",
      "response": "halt-additions-and-replan-with-stakeholders",
      "escalation": "project-sponsor-involvement",
      "recovery": "scope-negotiation-and-timeline-adjustment"
    },
    "qualityGateFailure": {
      "detection": "quality-standards-not-met",
      "response": "additional-review-and-rework-cycle",
      "escalation": "technical-lead-involvement",
      "recovery": "enhanced-quality-processes"
    },
    "teamCapacityIssues": {
      "detection": "velocity-decline-or-resource-constraints",
      "response": "capacity-replanning-and-scope-adjustment",
      "escalation": "resource-manager-involvement",
      "recovery": "team-augmentation-or-timeline-extension"
    },
    "stakeholderMisalignment": {
      "detection": "conflicting-priorities-or-requirements",
      "response": "stakeholder-alignment-session",
      "escalation": "executive-sponsor-involvement",
      "recovery": "requirements-clarification-and-prioritization"
    }
  },

  "qualityGates": {
    "projectInitialization": [
      "stakeholder-sign-off-obtained",
      "project-scope-clearly-defined",
      "team-capacity-validated",
      "success-criteria-established"
    ],
    "epicAndStoryCreation": [
      "all-epics-have-clear-business-value",
      "stories-have-complete-acceptance-criteria",
      "story-points-estimated-by-team",
      "dependencies-identified-and-planned"
    ],
    "sprintPlanning": [
      "sprint-goals-are-measurable",
      "team-capacity-not-exceeded",
      "critical-dependencies-resolved",
      "definition-of-done-understood"
    ],
    "taskExecution": [
      "daily-progress-tracking-active",
      "impediments-identified-and-addressed",
      "quality-standards-maintained",
      "stakeholder-communication-current"
    ],
    "qualityAssurance": [
      "code-reviews-completed-successfully",
      "all-tests-passing",
      "accessibility-standards-met",
      "performance-requirements-satisfied"
    ],
    "sprintReview": [
      "demo-successfully-completed",
      "stakeholder-feedback-collected",
      "retrospective-actions-identified",
      "next-sprint-prepared"
    ]
  },

  "monitoringAndMetrics": {
    "realTimeMetrics": [
      "sprint-burndown-progress",
      "task-completion-velocity",
      "quality-gate-pass-rate",
      "impediment-resolution-time",
      "stakeholder-satisfaction-score"
    ],
    "historicalMetrics": [
      "team-velocity-trends",
      "quality-improvement-trends",
      "predictability-metrics",
      "technical-debt-accumulation",
      "customer-satisfaction-evolution"
    ],
    "alertingThresholds": {
      "sprintBurndownRisk": "variance > 20% from planned",
      "qualityGateFailures": "failure rate > 10%",
      "velocityDecline": "decline > 15% over 2 sprints",
      "impedimentAccumulation": "unresolved impediments > 5",
      "stakeholderSatisfaction": "satisfaction < 8/10"
    }
  },

  "fileOrganization": {
    "outputLocation": "levCompiler/project_context/tasks/",
    "indexRegistration": "levCompiler/project_context/tasks/index.json",
    "sprintPlans": "levCompiler/project_context/tasks/sprints/",
    "reports": "levCompiler/project_context/tasks/reports/",
    "metrics": "levCompiler/project_context/tasks/metrics/",
    "templates": "levCompiler/project_context/tasks/templates/",
    "archives": "levCompiler/project_context/archive/tasks/"
  },

  "humanInteractionPoints": {
    "mandatoryApproval": [
      "project-charter-approval",
      "sprint-goal-confirmation",
      "scope-change-decisions",
      "quality-gate-exceptions",
      "resource-allocation-changes"
    ],
    "recommendedConsultation": [
      "complex-story-estimation",
      "technical-architecture-decisions",
      "stakeholder-conflict-resolution",
      "timeline-adjustment-requests",
      "team-performance-concerns"
    ],
    "escalationTriggers": [
      "repeated-sprint-failures",
      "persistent-quality-issues",
      "stakeholder-dissatisfaction",
      "team-capacity-crisis",
      "technical-debt-critical-level"
    ]
  },

  "adaptationMechanisms": {
    "velocityCalibration": "Continuously adjust velocity predictions based on actual performance",
    "qualityThresholdAdjustment": "Adapt quality thresholds based on defect patterns",
    "processOptimization": "Refine processes based on retrospective feedback",
    "stakeholderCommunicationTuning": "Adjust communication frequency and format based on feedback",
    "teamProductivityOptimization": "Optimize team productivity based on capacity and performance data"
  },

  "currentProjectStatus": {
    "projectName": "medSpaTheme - Treatment Cards Implementation",
    "currentSprint": "Treatment Cards Semantic Implementation - COMPLETED",
    "sprintStartDate": "{CURRENT_DATE}",
    "sprintEndDate": "{DATE_RELATIVE: +21_days}",
    "lastUpdated": "{CURRENT_TIMESTAMP}",
    "completionStatus": "100%",
    "designCompliance": {
      "referenceDocument": "TREATMENTS_OVERVIEW_VISUAL_DESIGN_SEMANTIC.md",
      "requirements": [
        "Zero hardcoded values - strict semantic token usage ✅",
        "Complete semantic token implementation ✅",
        "WCAG AAA accessibility compliance ✅",
        "Responsive design patterns (mobile-first) ✅"
      ],
      "complianceStatus": "FULLY_COMPLIANT"
    },
    "deliverables": {
      "treatmentCards": {
        "total": 9,
        "completed": 9,
        "status": "COMPLETED",
        "cards": [
          {
            "id": "injectable-artistry",
            "title": "Injectable Artistry",
            "status": "COMPLETED",
            "icon": "💉",
            "category": "injectable"
          },
          {
            "id": "facial-renaissance",
            "title": "Facial Renaissance",
            "status": "COMPLETED",
            "icon": "🌊",
            "category": "facial"
          },
          {
            "id": "precision-dermaplanning",
            "title": "Precision Dermaplanning",
            "status": "COMPLETED",
            "icon": "✨",
            "category": "precision"
          },
          {
            "id": "regenerative-prp",
            "title": "Regenerative PRP",
            "status": "COMPLETED",
            "icon": "🩸",
            "category": "regenerative"
          },
          {
            "id": "wellness-infusions",
            "title": "Wellness Infusions",
            "status": "COMPLETED",
            "icon": "💊",
            "category": "wellness"
          },
          {
            "id": "artistry-enhancement",
            "title": "Artistry Enhancement",
            "status": "COMPLETED",
            "icon": "🎨",
            "category": "artistry"
          },
          {
            "id": "laser-precision",
            "title": "Laser Precision",
            "status": "COMPLETED",
            "icon": "⚡",
            "category": "laser"
          },
          {
            "id": "carbon-rejuvenation",
            "title": "Carbon Rejuvenation",
            "status": "COMPLETED",
            "icon": "🖤",
            "category": "carbon"
          },
          {
            "id": "body-sculpting",
            "title": "Body Sculpting",
            "status": "COMPLETED",
            "icon": "💪",
            "category": "body"
          }
        ]
      },
      "components": {
        "treatmentCardComponent": "COMPLETED",
        "semanticCSS": "COMPLETED",
        "dataStructure": "COMPLETED",
        "accessibilityFeatures": "COMPLETED"
      }
    },
    "technicalImplementation": {
      "semanticTokens": "IMPLEMENTED",
      "responsiveDesign": "IMPLEMENTED",
      "accessibilityCompliance": "WCAG_AAA_COMPLIANT",
      "performanceOptimization": "IMPLEMENTED",
      "schemaMarkup": "IMPLEMENTED"
    },
    "completedItems": {
      "sprint6Tasks": {
        "status": "partially-completed",
        "deliverables": [
          {
            "item": "T6.1 Component Base Architecture",
            "description": "BaseComponent class, ComponentRegistry, ComponentFactory, demo components",
            "completion": "100%",
            "storyPoints": 3,
            "deliveryDate": "{CURRENT_DATE}"
          },
          {
            "item": "T6.2 Component Registry System Enhancement",
            "description": "Auto-loader, admin dashboard, enhanced integration",
            "completion": "100%",
            "storyPoints": 3,
            "deliveryDate": "{CURRENT_DATE}"
          },
          {
            "item": "T6.3 Button System Implementation",
            "description": "Complete ButtonComponent with 4 variants, 3 sizes, 15 Customizer controls",
            "completion": "100%",
            "storyPoints": 6,
            "deliveryDate": "{CURRENT_DATE}",
            "features": [
              "4 button variants (primary, secondary, outline, ghost)",
              "3 button sizes (small, medium, large)",
              "Icon support with flexible positioning",
              "15 WordPress Customizer controls",
              "Full WCAG 2.1 AA accessibility compliance",
              "Performance <100ms render architecture"
            ]
          },
          {
            "item": "T6.4 Card System Implementation",
            "description": "Complete card component system with specialized cards (treatment, testimonial, feature)",
            "completion": "100%",
            "storyPoints": 8,
            "deliveryDate": "{CURRENT_DATE}",
            "features": [
              "CardComponent base class with 4 variants and 3 sizes",
              "TreatmentCard with pricing, benefits, and booking CTAs",
              "TestimonialCard with ratings, author info, and verification",
              "FeatureCard with icons, stats, and expandable content",
              "27KB comprehensive CSS with responsive design",
              "15+ WordPress Customizer controls per component",
              "Full design token integration and WCAG 2.1 AA compliance",
              "Performance <100ms render time achieved",
              "Comprehensive demo template with real medical spa content"
            ]
          },
          {
            "item": "BUG-RESOLUTION-WF-001 - Critical Site Issues",
            "description": "Resolved all critical WordPress and customizer errors",
            "completion": "100%",
            "priority": "CRITICAL",
            "deliveryDate": "{CURRENT_DATE}",
            "issuesResolved": [
              "Homepage empty body issue - Fixed ComponentRegistry static method calls",
              "WordPress Customizer critical error - Fixed get_customizer_controls method call",
              "Visual Customizer admin bar button missing - Added include for visual-customizer-simple.php",
              "Missing helper functions - Added preetidreams_get_phone(), preetidreams_get_address(), etc."
            ]
          }
        ],
        "performance": {
          "plannedVelocity": "55 story points total",
          "completedVelocity": "20 story points (36.4%)",
          "remainingVelocity": "35 story points",
          "qualityScore": "100%",
          "bugCount": 0,
          "performanceMetrics": "<100ms component render time achieved",
          "systemStatus": "Fully operational - all critical errors resolved"
        }
      }
    },

    "currentTasks": {
      "readyToStart": [
        {
          "item": "T6.5 Form System Implementation",
          "description": "Complete form component system with validation, styling, and accessibility",
          "storyPoints": 13,
          "priority": "HIGH",
          "assignee": "CODE-GEN-001 via CODE-GEN-WF-001",
          "estimatedDuration": "{DURATION: 3-4_days}",
          "requirements": [
            "FormComponent base class with validation",
            "Input field components (text, email, phone, textarea)",
            "Form validation and error handling",
            "WordPress Customizer integration",
            "Design token inheritance",
            "Mobile responsive design"
          ]
        }
      ],
      "inProgress": [],
      "blocked": [],
      "backlog": [
        {
          "item": "T6.6 Navigation Components Implementation",
          "storyPoints": 12,
          "priority": "MEDIUM",
          "dependencies": ["T6.5 Form System"]
        },
        {
          "item": "T6.7 Section Template System",
          "storyPoints": 11,
          "priority": "MEDIUM",
          "dependencies": ["T6.5", "T6.6"]
        }
      ]
    },

    "remainingTasks": {
      "thisSprint": [
        {
          "item": "T6.5 Form System Implementation",
          "priority": "HIGH - NEXT ACTIVE TASK",
          "storyPoints": 13,
          "dependencies": ["Card system complete - ✅ DONE"]
        },
        {
          "item": "T6.6 Navigation Components Implementation",
          "priority": "MEDIUM",
          "storyPoints": 12,
          "dependencies": ["Form system complete"]
        },
        {
          "item": "T6.7 Section Template System",
          "priority": "MEDIUM",
          "storyPoints": 11,
          "dependencies": ["Forms and Navigation complete"]
        }
      ],
      "nextSprint": [
        {
          "item": "Integration and Optimization Sprint",
          "description": "Complete front-page.php migration and performance optimization",
          "priority": "HIGH",
          "estimatedStoryPoints": 21
        }
      ]
    },

    "qualityMetrics": {
      "currentSprint": {
        "codeQuality": "A+",
        "testCoverage": "95%",
        "performanceScore": "100%",
        "accessibilityScore": "100%",
        "documentationCompleteness": "100%",
        "bugDensity": "0 bugs/system",
        "criticalIssuesResolved": "4/4 (100%)",
        "componentRenderPerformance": "<100ms requirement met"
      }
    },

    "riskAssessment": {
      "current": [],
      "mitigated": [
        {
          "risk": "Critical WordPress Customizer errors blocking development",
          "mitigation": "Completed BUG-RESOLUTION-WF-001 workflow with full error resolution",
          "status": "resolved"
        },
        {
          "risk": "Component system performance degradation",
          "mitigation": "Implemented <100ms render architecture with performance monitoring",
          "status": "resolved"
        },
        {
          "risk": "Visual Customizer admin bar not accessible",
          "mitigation": "Added missing visual-customizer-simple.php include to functions.php",
          "status": "resolved"
        }
      ]
    },

    "stakeholderFeedback": {
      "lastReview": "{CURRENT_DATE}",
      "overallSatisfaction": "excellent",
      "keyFeedback": [
        "Component system foundation is solid and well-architected",
        "Performance consistently excellent (<100ms)",
        "All critical site errors resolved quickly and effectively",
        "Button system working perfectly with full customization",
        "Card system implementation exceeds expectations - comprehensive and feature-rich",
        "Specialized card types (Treatment, Testimonial, Feature) perfectly suited for medical spa needs",
        "27KB CSS implementation is well-organized and responsive"
      ],
      "requestedEnhancements": [
        "Complete form system for user interactions and bookings",
        "Navigation components for site structure",
        "Section template system for page layouts"
      ]
    }
  },

  "MANDATORY_DIRECTORY_ORGANIZATION": {
    "ENFORCEMENT_LEVEL": "ZERO_TOLERANCE",
    "VIOLATION_RESPONSE": "IMMEDIATE_WORKFLOW_HALT",
    "COMPLIANCE_REQUIREMENT": "MANDATORY_FOR_ALL_OPERATIONS",

    "DIRECTORY_STRUCTURE_RULES": {
      "STRICT_LOCATION_REQUIREMENTS": {
        "taskFiles": "levCompiler/project_context/tasks/ ONLY",
        "sprintFiles": "levCompiler/project_context/tasks/sprints/ subdirectories ONLY",
        "reportFiles": "levCompiler/project_context/tasks/reports/ subdirectories ONLY",
        "adminFiles": "levCompiler/project_context/tasks/administration/ ONLY",
        "indexRegistry": "levCompiler/project_context/tasks/index.json as SINGLE SOURCE OF TRUTH"
      },

      "SPRINT_ORGANIZATION_MANDATORY": {
        "activeSprints": "sprints/active/ - ONLY current sprint files (max 1-2 files)",
        "completedSprints": "sprints/completed/ - ONLY finished sprint files",
        "planningSprints": "sprints/planning/ - ONLY future sprint planning files",
        "NO_ROOT_SPRINT_FILES": "❌ NEVER create sprint files in sprints/ root directory",
        "PROPER_CATEGORIZATION": "✅ ALWAYS categorize by status: active/completed/planning"
      },

      "NAMING_CONVENTION_ENFORCEMENT": {
        "sprintFiles": "sprint-{number}-{descriptive-name}.md format MANDATORY",
        "reportFiles": "{type}-report-{identifier}.md format MANDATORY",
        "adminFiles": "{purpose}-{category}.md format MANDATORY",
        "NO_ARBITRARY_NAMING": "❌ NEVER use inconsistent or arbitrary file names"
      }
    },

    "WORKFLOW_DIRECTORY_GATES": {
      "pre_task_creation": [
        "validate-target-directory-compliance",
        "verify-index-json-accessibility",
        "confirm-naming-convention-adherence",
        "check-for-duplicate-prevention"
      ],
      "during_task_execution": [
        "continuous-directory-monitoring",
        "real-time-compliance-validation",
        "automatic-violation-detection",
        "immediate-correction-enforcement"
      ],
      "post_task_completion": [
        "final-directory-structure-audit",
        "index-json-update-verification",
        "cleanup-orphaned-files",
        "archive-completed-items"
      ]
    },

    "VIOLATION_PREVENTION": {
      "BEFORE_FILE_CREATION": [
        "❌ HALT if target directory outside project_context/tasks/",
        "❌ HALT if sprint file not in appropriate sprints/ subdirectory",
        "❌ HALT if naming convention not followed",
        "❌ HALT if duplicate file would be created"
      ],
      "DURING_OPERATIONS": [
        "❌ HALT if file moved outside designated structure",
        "❌ HALT if index.json not updated with changes",
        "❌ HALT if orphaned files detected",
        "❌ HALT if directory structure modified incorrectly"
      ],
      "VIOLATION_REMEDIATION": [
        "✅ REQUIRE immediate correction before proceeding",
        "✅ REQUIRE index.json update before completion",
        "✅ REQUIRE proper categorization before archival",
        "✅ REQUIRE workflow compliance verification"
      ]
    }
  }
}
