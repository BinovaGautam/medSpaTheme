{
  "agentManifest": {
    "version": "1.0.0",
    "iteration": 1,
    "totalAgents": 8,
    "activeAgents": 0,
    "coordinationProtocol": "event-driven-handoffs"
  },

  "agentDefinitions": {
    "requirement-analyzer": {
      "id": "REQ-AGENT-001",
      "status": "ready",
      "version": "1.0.0",
      "capabilities": [
        "requirement-discovery",
        "stakeholder-analysis",
        "acceptance-criteria-generation",
        "dependency-mapping",
        "compliance-validation"
      ],
      "inputTypes": ["business-requirements", "user-stories", "compliance-docs"],
      "outputTypes": ["REQ-entities", "dependency-graphs", "acceptance-criteria"],
      "handoffTriggers": ["requirements-complete", "analysis-failed", "human-review-needed"],
      "qualityGates": ["completeness-check", "stakeholder-validation", "compliance-verification"],
      "maxConcurrentTasks": 3,
      "complexityRating": "medium",
      "confidenceThreshold": 0.85
    },

    "architecture-designer": {
      "id": "ARCH-AGENT-001",
      "status": "ready",
      "version": "1.0.0",
      "capabilities": [
        "system-architecture-design",
        "technology-selection",
        "scalability-planning",
        "security-assessment",
        "performance-optimization"
      ],
      "inputTypes": ["REQ-entities", "technical-constraints", "platform-requirements"],
      "outputTypes": ["ADR-entities", "architecture-diagrams", "tech-stack-decisions"],
      "handoffTriggers": ["architecture-complete", "review-required", "technical-blocker"],
      "qualityGates": ["scalability-check", "security-validation", "performance-assessment"],
      "maxConcurrentTasks": 2,
      "complexityRating": "high",
      "confidenceThreshold": 0.90
    },

    "code-generator": {
      "id": "CODE-AGENT-001",
      "status": "ready",
      "version": "1.0.0",
      "capabilities": [
        "code-implementation",
        "api-development",
        "database-design",
        "testing-implementation",
        "documentation-generation"
      ],
      "inputTypes": ["TASK-entities", "architecture-specs", "coding-standards"],
      "outputTypes": ["source-code", "unit-tests", "api-documentation"],
      "handoffTriggers": ["implementation-complete", "testing-required", "review-needed"],
      "qualityGates": ["syntax-validation", "standard-compliance", "test-coverage"],
      "maxConcurrentTasks": 5,
      "complexityRating": "medium",
      "confidenceThreshold": 0.80
    },

    "critical-reviewer": {
      "id": "REVIEW-AGENT-001",
      "status": "ready",
      "version": "1.0.0",
      "capabilities": [
        "code-review",
        "architecture-validation",
        "security-analysis",
        "performance-assessment",
        "technical-debt-detection"
      ],
      "inputTypes": ["source-code", "architecture-docs", "performance-metrics"],
      "outputTypes": ["review-reports", "improvement-suggestions", "quality-scores"],
      "handoffTriggers": ["review-approved", "review-failed", "cleanup-required"],
      "qualityGates": ["security-clearance", "performance-benchmarks", "maintainability-score"],
      "maxConcurrentTasks": 4,
      "complexityRating": "high",
      "confidenceThreshold": 0.95
    },

    "garbage-cleaner": {
      "id": "CLEAN-AGENT-001",
      "status": "ready",
      "version": "1.0.0",
      "capabilities": [
        "code-optimization",
        "dead-code-removal",
        "dependency-cleanup",
        "performance-tuning",
        "refactoring"
      ],
      "inputTypes": ["review-reports", "performance-metrics", "code-analysis"],
      "outputTypes": ["optimized-code", "cleanup-reports", "performance-improvements"],
      "handoffTriggers": ["cleanup-complete", "performance-optimized", "manual-review-needed"],
      "qualityGates": ["functionality-preserved", "performance-improved", "maintainability-enhanced"],
      "maxConcurrentTasks": 3,
      "complexityRating": "medium",
      "confidenceThreshold": 0.85
    },

    "testing-specialist": {
      "id": "TEST-AGENT-001",
      "status": "ready",
      "version": "1.0.0",
      "capabilities": [
        "test-strategy-design",
        "automated-test-generation",
        "integration-testing",
        "performance-testing",
        "security-testing"
      ],
      "inputTypes": ["source-code", "requirements", "test-scenarios"],
      "outputTypes": ["test-suites", "test-reports", "coverage-analysis"],
      "handoffTriggers": ["testing-complete", "coverage-achieved", "quality-verified"],
      "qualityGates": ["coverage-threshold", "performance-benchmarks", "security-clearance"],
      "maxConcurrentTasks": 3,
      "complexityRating": "medium",
      "confidenceThreshold": 0.90
    },

    "deployment-orchestrator": {
      "id": "DEPLOY-AGENT-001",
      "status": "ready",
      "version": "1.0.0",
      "capabilities": [
        "deployment-automation",
        "environment-management",
        "rollback-procedures",
        "monitoring-setup",
        "scaling-configuration"
      ],
      "inputTypes": ["deployable-artifacts", "environment-configs", "monitoring-requirements"],
      "outputTypes": ["deployment-status", "environment-health", "monitoring-dashboards"],
      "handoffTriggers": ["deployment-successful", "rollback-triggered", "scaling-required"],
      "qualityGates": ["health-checks", "performance-validation", "security-verification"],
      "maxConcurrentTasks": 2,
      "complexityRating": "high",
      "confidenceThreshold": 0.95
    },

    "project-coordinator": {
      "id": "COORD-AGENT-001",
      "status": "ready",
      "version": "1.0.0",
      "capabilities": [
        "workflow-orchestration",
        "agent-coordination",
        "conflict-resolution",
        "progress-tracking",
        "escalation-management"
      ],
      "inputTypes": ["workflow-definitions", "agent-status", "project-requirements"],
      "outputTypes": ["coordination-decisions", "progress-reports", "escalation-alerts"],
      "handoffTriggers": ["coordination-complete", "conflict-detected", "human-intervention-needed"],
      "qualityGates": ["workflow-integrity", "agent-availability", "timeline-adherence"],
      "maxConcurrentTasks": 10,
      "complexityRating": "high",
      "confidenceThreshold": 0.95
    }
  },

  "coordinationRules": {
    "handoffProtocols": {
      "requirement-to-architecture": {
        "trigger": "requirements-complete",
        "sourceAgent": "requirement-analyzer",
        "targetAgent": "architecture-designer",
        "dataTransfer": ["REQ-entities", "dependency-graphs"],
        "qualityChecks": ["completeness-verification", "consistency-validation"]
      },
      "architecture-to-coding": {
        "trigger": "architecture-complete",
        "sourceAgent": "architecture-designer",
        "targetAgent": "code-generator",
        "dataTransfer": ["ADR-entities", "architecture-specs"],
        "qualityChecks": ["feasibility-assessment", "resource-availability"]
      },
      "coding-to-review": {
        "trigger": "implementation-complete",
        "sourceAgent": "code-generator",
        "targetAgent": "critical-reviewer",
        "dataTransfer": ["source-code", "documentation"],
        "qualityChecks": ["syntax-validation", "standard-compliance"]
      },
      "review-to-cleanup": {
        "trigger": "review-failed",
        "sourceAgent": "critical-reviewer",
        "targetAgent": "garbage-cleaner",
        "dataTransfer": ["review-reports", "improvement-suggestions"],
        "qualityChecks": ["actionable-feedback", "scope-definition"]
      }
    },

    "conflictResolution": {
      "resourceContention": "priority-based-scheduling",
      "agentDisagreement": "confidence-score-weighted-decision",
      "deadlockDetection": "iteration-based-escalation",
      "performanceIssues": "load-balancing-redistribution"
    },

    "escalationTriggers": {
      "lowConfidence": "< 0.70",
      "retryLimitExceeded": "> 3 attempts",
      "qualityGateFailed": "3 consecutive failures",
      "agentUnresponsive": "no-response-after-ping",
      "humanReviewRequired": "confidence < 0.80 AND critical-path"
    }
  },

  "performanceMetrics": {
    "systemHealth": 100,
    "totalWorkflowsCompleted": 0,
    "successRate": 0.95,
    "humanInterventionRate": 0.05,
    "currentIteration": 1
  }
}
