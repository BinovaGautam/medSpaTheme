{
  "aiCapabilityFramework": {
    "version": "1.0.0",
    "description": "Foundational framework defining AI agent capabilities and limitations for Levenest system design",
    "designPrinciple": "Design around agent strengths, avoid agent weaknesses"
  },

  "agentStrengths": {
    "patternRecognition": {
      "capability": "excellent",
      "applications": ["code-analysis", "architecture-patterns", "best-practices-detection"],
      "reliability": 95,
      "designImplication": "Use for complex pattern matching and structural analysis"
    },
    "textProcessing": {
      "capability": "excellent",
      "applications": ["documentation-generation", "requirement-analysis", "content-creation"],
      "reliability": 98,
      "designImplication": "Primary strength for content-based workflows"
    },
    "logicalReasoning": {
      "capability": "very-good",
      "applications": ["dependency-analysis", "decision-trees", "conditional-logic"],
      "reliability": 90,
      "designImplication": "Reliable for structured reasoning and rule-based decisions"
    },
    "codeGeneration": {
      "capability": "very-good",
      "applications": ["implementation", "testing", "documentation", "refactoring"],
      "reliability": 85,
      "designImplication": "Strong for standard patterns, needs review for complex logic"
    },
    "structuredDataProcessing": {
      "capability": "excellent",
      "applications": ["json-manipulation", "data-transformation", "entity-extraction"],
      "reliability": 95,
      "designImplication": "Perfect for configuration management and data workflows"
    }
  },

  "agentWeaknesses": {
    "temporalReasoning": {
      "limitation": "poor",
      "manifestations": ["date-calculations", "time-zone-handling", "duration-estimation", "scheduling"],
      "failureRate": 60,
      "avoidanceStrategy": "Use version-based progression, iteration counters, state-based tracking"
    },
    "realTimeContext": {
      "limitation": "poor",
      "manifestations": ["current-events", "live-data", "market-conditions", "user-behavior"],
      "failureRate": 80,
      "avoidanceStrategy": "Use snapshot-based data, version-controlled context"
    },
    "numericPrecision": {
      "limitation": "moderate",
      "manifestations": ["financial-calculations", "scientific-computing", "precision-math"],
      "failureRate": 30,
      "avoidanceStrategy": "Use external calculation services, validation layers"
    },
    "stateManagement": {
      "limitation": "moderate",
      "manifestations": ["long-term-memory", "context-switching", "state-persistence"],
      "failureRate": 40,
      "avoidanceStrategy": "External state management, explicit context passing"
    },
    "concurrencyHandling": {
      "limitation": "poor",
      "manifestations": ["race-conditions", "deadlock-detection", "resource-contention"],
      "failureRate": 70,
      "avoidanceStrategy": "External orchestration, lock management, queue systems"
    }
  },

  "systemDesignPrinciples": {
    "temporalAgnostic": {
      "principle": "Never rely on agents for time-based operations",
      "implementation": [
        "Use version numbers instead of timestamps",
        "Use iteration counts instead of duration estimates",
        "Use sequence numbers for ordering",
        "Use state progression instead of time-based triggers"
      ],
      "examples": {
        "avoid": ["lastUpdated: 2025-01-28", "timeout: 30min", "deadline: tomorrow"],
        "use": ["version: 1.2.3", "iteration: 5", "attempt: 3", "state: complete"]
      }
    },
    "stateExternalization": {
      "principle": "Never rely on agents to maintain complex state",
      "implementation": [
        "External state management systems",
        "Explicit context passing between agents",
        "Immutable data structures",
        "State validation at boundaries"
      ]
    },
    "deterministicWorkflows": {
      "principle": "Workflows must be predictable and repeatable",
      "implementation": [
        "Clear trigger conditions",
        "Explicit handoff protocols",
        "Deterministic routing rules",
        "Fallback procedures for every decision point"
      ]
    },
    "confidenceCalibration": {
      "principle": "Every agent decision must include confidence scoring",
      "implementation": [
        "Confidence thresholds for escalation",
        "Multiple validation layers",
        "Human review triggers",
        "Quality gate enforcement"
      ]
    }
  },

  "failurePreventionStrategies": {
    "inputValidation": {
      "strategy": "Validate all inputs before agent processing",
      "implementation": ["schema-validation", "type-checking", "range-validation", "format-verification"]
    },
    "outputVerification": {
      "strategy": "Verify all agent outputs before handoff",
      "implementation": ["structure-validation", "logic-verification", "quality-scoring", "peer-review"]
    },
    "fallbackMechanisms": {
      "strategy": "Define fallbacks for every agent operation",
      "implementation": ["default-behaviors", "human-escalation", "previous-version-rollback", "simplified-workflows"]
    },
    "isolationBoundaries": {
      "strategy": "Prevent agent failures from cascading",
      "implementation": ["circuit-breakers", "timeout-protection", "resource-limits", "error-containment"]
    }
  },

  "agentCapabilityMapping": {
    "requirement-analyzer": {
      "strengths": ["text-processing", "pattern-recognition", "logical-reasoning"],
      "limitations": ["temporal-reasoning", "real-time-context"],
      "designAdjustments": ["version-based-requirements", "snapshot-based-analysis"]
    },
    "architecture-designer": {
      "strengths": ["pattern-recognition", "logical-reasoning", "structured-data"],
      "limitations": ["numeric-precision", "real-time-context"],
      "designAdjustments": ["pattern-based-decisions", "external-performance-validation"]
    },
    "code-generator": {
      "strengths": ["code-generation", "text-processing", "pattern-recognition"],
      "limitations": ["concurrency-handling", "numeric-precision"],
      "designAdjustments": ["template-based-generation", "external-validation-layers"]
    },
    "critical-reviewer": {
      "strengths": ["pattern-recognition", "logical-reasoning", "text-processing"],
      "limitations": ["temporal-reasoning", "state-management"],
      "designAdjustments": ["snapshot-based-review", "external-metric-validation"]
    },
    "garbage-cleaner": {
      "strengths": ["pattern-recognition", "code-generation", "structured-data"],
      "limitations": ["state-management", "concurrency-handling"],
      "designAdjustments": ["atomic-operations", "external-coordination"]
    }
  },

  "monitoringAndAdaptation": {
    "performanceMetrics": {
      "successRate": "percentage-of-successful-operations",
      "confidenceAccuracy": "correlation-between-confidence-and-success",
      "escalationRate": "percentage-requiring-human-intervention",
      "failurePatterns": "categorized-failure-analysis"
    },
    "adaptationMechanisms": {
      "thresholdAdjustment": "Adjust confidence thresholds based on performance",
      "capabilityRefinement": "Update capability definitions based on observed performance",
      "workflowOptimization": "Modify workflows to leverage strengths and avoid weaknesses",
      "agentSpecialization": "Focus agents on areas of demonstrated competence"
    }
  },

  "humanSupervisionProtocols": {
    "automaticEscalation": {
      "lowConfidence": "< 0.70 confidence score",
      "novelSituation": "No matching patterns in knowledge base",
      "criticalPath": "High-impact decisions",
      "repeatedFailure": "3+ consecutive failures"
    },
    "humanReviewRequired": [
      "Business-critical decisions",
      "Security-related changes",
      "Performance-impacting modifications",
      "External-integration-points"
    ],
    "supervisorFeedback": {
      "correctiveActions": "Human corrections become training data",
      "qualityValidation": "Human validation improves confidence calibration",
      "processRefinement": "Human insights drive system improvements"
    }
  }
}
